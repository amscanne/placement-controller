apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:placement-controller
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: placement-controller
  name: placement-controller-leases
rules:
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:placement-controller
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:placement-controller
subjects:
- kind: ServiceAccount
  name: placement-controller
  namespace: placement-controller
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: placement-policy-binding
  namespace: placement-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: placement-controller-leases
subjects:
- kind: ServiceAccount
  name: placement-controller
  namespace: placement-controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: placement-controller
  namespace: placement-controller
  labels:
    app: placement-controller
spec:
  replicas: 3
  selector:
    matchLabels:
      app: placement-controller
  template:
    metadata:
      labels:
        app: placement-controller
    spec:
      serviceAccountName: placement-controller
      nodeSelector:
        iam.gke.io/gke-metadata-server-enabled: "true"
      containers:
        - name: placement-controller
          image: ko://github.com/amscanne/placement-controller/cmd/placement_controller
          args:
            - -leader-elect=true
            - -lease-namespace=placement-controller
          resources:
            requests:
              memory: "64Mi"
              cpu: "10m"
            limits:
              memory: "256Mi"
              cpu: "100m"
